#############################################################################
# Makefile for building: libsys.so
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu Sep 25 15:24:12 2014
# Project:  sys.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/lib64/qt4/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile sys.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -m64 -pipe -g -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++-64 -I.
LINK          = g++
LFLAGS        = -m64 -shared
LIBS          = $(SUBLIBS)    
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = alt_functions.c \
		become_daemon.c \
		binary_sems.c \
		create_pid_file.c \
		curr_time.c \
		error_functions.c \
		event_flags.c \
		file_perms.c \
		get_num.c \
		inet_sockets.c \
		itimerspec_from_str.c \
		print_rlimit.c \
		print_rusage.c \
		print_wait_status.c \
		pty_fork.c \
		pty_master_open.c \
		rdwrn.c \
		read_line.c \
		read_line_buf.c \
		region_locking.c \
		signal.c \
		signal_functions.c \
		tty_functions.c \
		ugid_functions.c \
		unix_sockets.c 
OBJECTS       = alt_functions.o \
		become_daemon.o \
		binary_sems.o \
		create_pid_file.o \
		curr_time.o \
		error_functions.o \
		event_flags.o \
		file_perms.o \
		get_num.o \
		inet_sockets.o \
		itimerspec_from_str.o \
		print_rlimit.o \
		print_rusage.o \
		print_wait_status.o \
		pty_fork.o \
		pty_master_open.o \
		rdwrn.o \
		read_line.o \
		read_line_buf.o \
		region_locking.o \
		signal.o \
		signal_functions.o \
		tty_functions.o \
		ugid_functions.o \
		unix_sockets.o
DIST          = /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		sys.pro
QMAKE_TARGET  = sys
DESTDIR       = ../../build/lib/
TARGET        = libsys.so
TARGETD       = libsys.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../../build/lib/$(TARGET)

../../build/lib/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../../build/lib/ || $(MKDIR) ../../build/lib/ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) ../../build/lib/



Makefile: sys.pro  /usr/lib64/qt4/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile sys.pro
/usr/lib64/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/debug.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile sys.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/sys1.0.0 || $(MKDIR) .tmp/sys1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/sys1.0.0/ && (cd `dirname .tmp/sys1.0.0` && $(TAR) sys1.0.0.tar sys1.0.0 && $(COMPRESS) sys1.0.0.tar) && $(MOVE) `dirname .tmp/sys1.0.0`/sys1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/sys1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

alt_functions.o: alt_functions.c alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o alt_functions.o alt_functions.c

become_daemon.o: become_daemon.c become_daemon.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o become_daemon.o become_daemon.c

binary_sems.o: binary_sems.c semun.h \
		binary_sems.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o binary_sems.o binary_sems.c

create_pid_file.o: create_pid_file.c region_locking.h \
		create_pid_file.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o create_pid_file.o create_pid_file.c

curr_time.o: curr_time.c curr_time.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o curr_time.o curr_time.c

error_functions.o: error_functions.c error_functions.h \
		tlpi_hdr.h \
		get_num.h \
		alt_functions.h \
		ename.c.inc
	$(CC) -c $(CFLAGS) $(INCPATH) -o error_functions.o error_functions.c

event_flags.o: event_flags.c semun.h \
		event_flags.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o event_flags.o event_flags.c

file_perms.o: file_perms.c file_perms.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o file_perms.o file_perms.c

get_num.o: get_num.c get_num.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o get_num.o get_num.c

inet_sockets.o: inet_sockets.c inet_sockets.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o inet_sockets.o inet_sockets.c

itimerspec_from_str.o: itimerspec_from_str.c itimerspec_from_str.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o itimerspec_from_str.o itimerspec_from_str.c

print_rlimit.o: print_rlimit.c print_rlimit.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o print_rlimit.o print_rlimit.c

print_rusage.o: print_rusage.c print_rusage.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o print_rusage.o print_rusage.c

print_wait_status.o: print_wait_status.c print_wait_status.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o print_wait_status.o print_wait_status.c

pty_fork.o: pty_fork.c pty_master_open.h \
		pty_fork.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pty_fork.o pty_fork.c

pty_master_open.o: pty_master_open.c pty_master_open.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pty_master_open.o pty_master_open.c

rdwrn.o: rdwrn.c rdwrn.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o rdwrn.o rdwrn.c

read_line.o: read_line.c read_line.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o read_line.o read_line.c

read_line_buf.o: read_line_buf.c read_line_buf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o read_line_buf.o read_line_buf.c

region_locking.o: region_locking.c region_locking.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o region_locking.o region_locking.c

signal.o: signal.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o signal.o signal.c

signal_functions.o: signal_functions.c signal_functions.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o signal_functions.o signal_functions.c

tty_functions.o: tty_functions.c tty_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o tty_functions.o tty_functions.c

ugid_functions.o: ugid_functions.c ugid_functions.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ugid_functions.o ugid_functions.c

unix_sockets.o: unix_sockets.c unix_sockets.h \
		tlpi_hdr.h \
		get_num.h \
		error_functions.h \
		alt_functions.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o unix_sockets.o unix_sockets.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

